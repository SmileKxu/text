javascript
javascript一种直译式脚本语言，是一种动态类型、弱类型(赋值就可以 不用指定类型)

组成部分三部分组成
ECMAScript基本语法 DOM文档对象模型 BOM浏览器对象模型

javascript编写方式
1.行内样式 2.嵌套样式 3.外部引用的js文件

js代码都写在script标签内，但script代码不会在页面上显示

引入外部的js文件，引入的时候，该代码会立即执行，默认情况下，浏览器会在此阻塞，直到
该代码加载完毕，才会执行后面的其他代码，所以js文件一般都引用在最后。

标识符
字母 数字 下划线_ $ 数字不能开头

js基本语法
var 关键字，用来定义变量 可以直接用 = 进行赋值。
console.log(___); 打印变量___。

定义一个函数，函数名为name
在js中是以函数区分作用域的
function name(){
   console.log(age1 + age2);
}
name()

js的全局变量与局部变量
全局变量 直接在script标签内定义变量
局部变量 定义在函数内部的变量 局部变量在函数外部不能访问

typeof 测试数据类型
typeof 测试任何变量都不会出现错误

字符串拼接可以用 + (加号)拼接
字符串拼接，原则是只要有一个是字符串，就都会变成字符串
其他类型转换为字符串方法
toString()方法可以让变量本身变成字符串
或者使用空字符串 与 变量连接可以直接转换成字符串
undefined 与 null 直接使用toString()方
法会报错 需要使用String()方法

Boolean类型
Boolean的结果只有false和true
Boolean 类型只有  "" 0 NaN null undefined 结果为false
其他类型转换为Boolean类型分为显示转换和隐式转换
就像if()判断就是隐式转换

js数值类型
8进制的数值是以0开头的
16进制的数值是以0x开头的
8进制与16进制的数值都不能表示小数
对于极大或者极小的数值，可以用e表示法(即科学计数法)
var a = 3.5*e7  表示 3.5 * 10 ^ 7;

NaN是一个不是数值的数值(特殊的数值)
isNaN()函数可以接受一个任意类型的参数，这个函数会帮我们确定是否"不是数值"。
不是数值的输出true 是数值的输出false

函数function的两种定义模式
1. function name(){};
2  var result = function(){}; 赋值方式定义一个函数

关于函数声明提升与变量声明提升
1.函数声明提升：函数可以定义在代码中的任意位置，当代码运行时，javascript引擎会自动将
函数的声明提升到代码顶部。
2变量声明提升：当代码运行时，定义的变量在运行时也会被提升到代码的顶部，但是其赋值并没有
发生变化。

函数声明的几大特点:
在 javaScript 中变量和函数声明会提升到最顶部执行。
函数的提升高于变量的提升。
函数内部如果用var声明了相同名称的外部变量，函数将不再向上寻找(就不会访问外部的全局变量)。
匿名函数不会提升。
