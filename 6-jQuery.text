jquery
jquery封装了javaScript常用的功能代码，可以说jQuery改变了用户编写javaScript代码
的方式，jQuery设计的宗旨是写更少的代码，做更多的事情。

<script></script>标签需要在jquery库的基础上操作页面
jQuery中的 $ == jQuery，就是jQuery库提供的用于选择元素的接口

如果引入多个库并且有其余的库提供的也是$符号，那么采用如下方式解决与jquery$符号冲突:
1.可以重新定义一个符号，让他等于 jQuery.noConflict() 例:var $$ = jQuery.noConflict();
2.在jQuery中，$ == jQuery，那么定义一个匿名函数
 (function($){
   所有的jQuery操作，都写在该匿名函数的内部。在内部$仍然是jQuery。
 })(jQuery);

jQuery选择器

jQuery基本选择器 与 css的基本选择器基本相同
id选择器 类选择器 标签选择器 并集选择器 *(通配选择器);
选择器的操作都要放在 $(" ")里;

jQuery位置选择器
:eq()    在匹配的集合中选择索引值为index的元素 (index: 要匹配的索引值 从0开始计数;
:odd()   选择索引值为基数元素，从0开始计数。
:even()  选择索引值为偶数的元素，从0开始计数。
odd 与 even 直接写在$(" 元素的后面:odd 或 even")

jQuery子元素选择器
:first-child    选择所有父级元素下的第一个子元素
:last-child     选择所有父级元素下的最后一个子元素
:nth-child(n)   选择他们所有父元素的第n个子元素 每个相匹配 子元素的索引值 从1开始。

jQuery DOM操作
DOM 插入文件 (内部插入) append prepend appendTo prependTo
.append()     在当前匹配元素的尾部插入参数内容
.prepend()    将参数内容插入到每个匹配元素的前面
.append() 与 .prepend() 的操作对象都是要添加的参数内容
.appendTo() 与 .prependTo() 与.append() 和 .prepend() 功能相同 但是其操作对象是
当前获得的匹配元素。

DOM 插入文件 (外部插入) after before insertAfter insertBefore
.after()     在当前匹配的元素后面插入参数所指定的内容，并作为兄弟节点。
.before()    将参数内容插入到当前匹配的元素前面，并作为兄弟节点。
.insertAfter() 和 .insertBefore() 与 .after() 和 .before() 功能相同 但是操作对象
恰好相反

DOM html 和 text
.html() 可以直接打印文本内容 并且可以设置替换文本内容 可查看标签并替换标签
.text() 与html的区别就是只能查看元素内容 不可以查看元素标签 替换内容时也不会替换标签

删除 .remove() 与 .empty() 操作。
.remove() 移除文件 会将整个元素全部移除 包括该元素的标签
.empty()  移除文件 会将整个元素和元素内部的内容移除 但是会保留标签

替换 .replaceAll() 与 replaceWith()
.replaceWith() 先获得匹配的元素 在.replaceWith()括号内输入替换的标签或者字符串
.replaceWith() 与 .replaceAll 都可以把当前存在的标签替换到指定位置,此时被替换的
标签就不存在了。

包裹 .wrap() 与 .wrapAll()
.wrap() 会对当前选择的元素进行包裹 但是对每一个元素均会包裹
.wrapAll() 会对当前选择的元素进行包裹 但是会对所有的选择元素一次性包裹 (其包裹标签可以添加选择器)。

克隆 .clone()
.clone() 属性后面一定要添加到某个地方 不是直接.clone()后面就结束了 这样没有效果。
不是用.clone()   直接使用append 会将当前元素替换到新的调节位置

.find() 首先先确定一个范围 .find()会选择当前范围内的所有元素 根据要求来判断选择哪个

.siblings() 可以选择当前元素相邻的所有兄弟元素 (上下元素均包括);

.click()事件 为元素添加点击事件时，其添加的类型为一个函数，也就是说添加的事件要写在函数内

.hover()事件 为元素添加鼠标指针进入和离开事件， .hover()事件因为是移入和移出所以要添加两个
函数 如下: .hover(function(){ },function(){ });

.mouseenter() 与 .mouseleave();
.mouseover() 与 .mouseout();

一个元素可以添加多个点击事件，其事件发生顺序依照代码的先后顺序依次执行
.click() ()内不写函数 表示直接触发元素的click事件


.on() 与 .off() 事件绑定
.on() 添加事件绑定
.on() 括号内的参数为.on( events [, selector ] [, data ], handler(eventObject))
events 类型: string 指的就是事件类型和可选的命名空间
selector 类型: string 指的是选中元素触发事件的后代元素
handler 类型: function() 事件被触发时，执行的函数。
如果有selector参数 那么此时函数内的$(this)其this为selector选中的元素。
事件处理函数handler是on的参数，直接定义时，函数属于 on 的局部函数，外部无法访问该局部函数
所以为了添加和取消方便，要在外面定义一个全局函数，用该函数的名字来添加和取消。
.on

.off() 解除事件绑定
取消指定事件函数的处理事件要给函数起名字，这和 on 添加的函数名字是一样的。
.off() 可以根据当前存在的事件选择性的取消，如果()内不填events，那么就认为清除当前元素的
所有事件。

.trigger() 触发自定义事件
在jq中可以自己注册自定义事件，用on的方法添加到元素上，但是元素不会触发该事件，这时就可以
用.trigger()来触发该事件，.trigger()也可以触发当前已有的其他事件。

表单获得焦点事件
.focusin()获得焦点  .focusout()离开焦点

关于消失和显示的事件
.show() 与 .hide();
.fadeIn() 与 .fadeOut();  渐变形式消失

.index() 从匹配的元素中搜索的给定元素的索引值，从0开始计数。
