借用构造函数
借用构造函数指的是 ，一个构造函数调用另一个构造函数的属性和方法
在调用的构造函数中 输入要调用的构造函数名字 然后 .call()方法;
objName.call(this); 此时就相当于把 objName 构造函数转换了一个运行环境，其this就是运行
的新环境。

组合继承
原型链继承和借用构造函数继承相结合。
解决了原型链继承出现的问题，可以借用构造函数的方法获得要继承的属性和方法，然后原型链继承
要继承函数的方法。

对象的遍历和数组的遍历不同，其遍历方式采用的是 for(key in obj){
   console.log(key); 可以获得对象的键， console.log(obj[key]); 可以获得对象的值。
};

JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式，主要用于传送数据。

JSON可以将javascript对象中表示的一组数据转换为字符串，然后就可以在函数之间轻松地传递这个
字符串，或者在异步应用程序中将字符串从Web客户机传递给服务端程序。

JSON在修改数据的时候， obj.name = xxx  这时修改的 name 不需要加"".

JSON 对象包含用于解析 Javascript Object Notation(JSON)的方法，并将值转换为JSON。
它不能被代用或者作为构造函数，具有两个方法。

json的书写与对象类似，也写在{ }内，只不过其键也要用引号括起，以 , 逗号隔开。

JSON.parse(); 方法 将一个新字符串解析为JSON，可选地转换生成的值及其属性，并返回值。
JSON.stringify();方法 返回与指定值相对应的一个JSON字符串，可选地仅包含某些属性或以用
户定义的方式替换属性值。

call()方法在使用一个指定的this值和若干个指定的参数值的前提下调用某个函数或方法。
call()方法就是对其指定一个执行环境(this)，第二个参数为其参数列表，就是其需要的参数。

call()方法与apply()方法的区别，call()方法接受的是若干个参数的列表，而apply()方法
接受的是一个包含多个参数的数组。

如果apply()方法第一个参数传递的是null，那么就意味着其执行环境没变。apply()方法第二个
参数制定的为数组，会把数组中的元素当做参数来进行传递。
